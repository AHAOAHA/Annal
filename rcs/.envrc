# Active env functions in shell scripts.
set -a

# Proxy utils is depend on polipo and protocol sock5.
function proxy() {
    case $1 in
    on)
        export no_proxy="localhost,127.0.0.1,localaddress,.localdomain.com"
        export http_proxy="http://127.0.0.1:8123"
        export https_proxy=$http_proxy
        export ftp_proxy=$http_proxy
        export rsync_proxy=$http_proxy
        export HTTP_PROXY=$http_proxy
        export HTTPS_PROXY=$http_proxy
        export FTP_PROXY=$http_proxy
        export RSYNC_PROXY=$http_proxy
    ;;
    off)
        unset no_proxy
        unset http_proxy
        unset https_proxy
        unset ftp_proxy
        unset rsync_proxy
        unset HTTP_PROXY
        unset HTTPS_PROXY
        unset FTP_PROXY
        unset RSYNC_PROXY
    ;;
    -h|--help)
        cat << EOF
Usage: ${0##*/} [-h|--help]
    -h|--help   show help
    on          proxy enable
    off         proxy disable
EOF
    ;;
    *)
        proxy on
        $@
        proxy off
    ;;
    esac
}

# Skip git large storage files in go modules.
function skiplfs() {
    case $1 in
    on)
        export GIT_LFS_SKIP_SMUDGE=1
    ;;
    off)
        unset GIT_LFS_SKIP_SMUDGE
    ;;
    *)
        cat << EOF
Usage: ${0##*/} [-h|--help]
    on  "git modules skip lfs files"
    off "git modules not skip lfs files"
EOF
    ;;
    esac
}

# Rand intger in [$1, $2].
function rand() {
    min=0
    max=0
    case $# in
    0)
        echo $RANDOM
        return 0
    ;;
    1)
        max=$1
    ;;
    2)
        min=$1
        max=$(($2-$min+1))
    ;;
    *)
        echo "invalid parameters"
        return 1
;;
    esac
    echo $(($RANDOM%$max+$min))
}

function isnum() {
    if [ $# -ne 1 ]; then
        return 1
    fi

    expr $1 "+" 10 &> /dev/null
    if [ $? -ne 0 ];then
        return 1
    fi

    return 0
}

function ssht () {
    ssh -t "$@" "tmux attach || tmux new"
}

if [ -f ${HOME}/.functionrc ]; then
    source ${HOME}/.functionrc
fi

set +a

# Annal env.
if [ -f ${HOME}/.annalrc ]; then
    source ${HOME}/.annalrc
fi

export GOROOT="$HOME/.local/go"
export GOPATH="$HOME/dev/go"
export PATH="$HOME/.local/bin:$HOME/.local/go/bin:$GOPATH/bin:$HOME/.local/cmake/bin:$PATH"
export LD_LIBRARY_PATH="$HOME/.local/lib:$LD_LIBRARY_PATH"
export C_INCLUDE_PATH="$HOME/.local/include:$C_INCLUDE_PATH"
export CPLUS_INCLUDE_PATH=$C_INCLUDE_PATH
export LIBRARY_PATH=$LD_LIBRARY_PATH
export PKG_CONFIG_PATH="$HOME/.local/lib/pkgconfig:$PKG_CONFIG_PATH"
# export DOCKER_CLI_EXPERIMENTAL=enabled # 启动docker buildx
export LUA_LOCAL_PATH=$HOME/.luarocks
export LUA_PATH="$LUA_LOCAL_PATH/share/lua/5.1/?.lua;$LUA_LOCAL_PATH/share/lua/5.1/?/?.lua;;"
export GPG_TTY=$(tty)
export GIT_EDITOR=vim
export EDITOR=vim

# .inti_envrc is for private env.
if [ -f ${HOME}/.inti_envrc ]; then
    source ${HOME}/.inti_envrc
fi

if [ -f ${HOME}/.aliases ]; then
    source ${HOME}/.aliases
fi
